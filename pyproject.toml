[project]
name = "chatgpt-docstrings"
version = "0.10.1"
requires-python = ">=3.9"

[dependency-groups]
language-server = [
    "pygls~=1.3",
    "jedi~=0.19",
    "openai~=1.58",
    "pydantic~=1.10",  # via openai (pydantic>=2 is not pure python)
    "httpx[socks]~=0.28",  # via openai (optional dependency is required to support proxies)
    "jiter==0.4"  # via openai (see tool.uv.sources section)
]
linting = [
    "pyright>=1.1",
    "isort>=5.13",
    "black>=24.10",
    "flake8>=7.1",
    "flake8-annotations>=3.1",
    "flake8-bugbear>=24.12",
    "flake8-builtins>=2.5",
    "flake8-docstrings>=1.7",
    "flake8-isort>=6.1",
    "flake8-pyproject>=1.2",
    "flake8-quotes>=3.4",
    "flake8-simplify>=0.21"
]
testing = [
    "pytest~=8.3",
    "pytest-asyncio~=0.25"
]
dev = [
    {include-group = "linting"},
    {include-group = "testing"},
    "nox==2024.10.9",
    "pre-commit~=4.0"
]

[tool.uv]
package = false

[tool.uv.sources]
jiter = { path = "fake-jiter/jiter-0.4.0-py3-none-any.whl" }  # original 'jiter' is not pure Python

[tool.pyright]
exclude = [
    ".venv",
    ".nox",
    "src",
    "language_server/libs"
]
extraPaths = ["language_server/libs"]
pythonPlatform = "All"

[tool.isort]
src_paths = ["language_server"]
profile = "black"

[tool.flake8]
exclude = [
    ".venv",
    ".nox",
    "__pycache__",
    "src",
    "node_modules",
    "language_server/libs"
]
max-line-length = 90
inline-quotes = "\""
import-order-style = "pep8"
docstring-convention = "google"
application-import-names = ["utils", "commands", "completions", "custom_types", "initialize", "log", "notification", "progress", "server", "settings"]
extend-ignore = [
    # Line break before binary operator (needed for compatibility with black)
    "W503",
    # Whitespace before ':' (needed for compatibility with black)
    "E203",
    # Missing type annotation for *args
    "ANN002",
    # Missing type annotation for **kwargs
    "ANN003",
    # Missing type annotation for self in method
    "ANN101",
    # Missing type annotation for cls in classmethod
    "ANN102",
    # Using .strip() with multi-character strings is misleading the reader
    "B005",
    # Missing docstring in public module
    "D100",
    # Missing docstring in public package
    "D104",
    # Missing docstring in magic method
    "D105",
    # Missing docstring in __init__
    "D107"
]

[tool.black]
exclude = '''
.venv|
.nox|
node_modules|
language_server/libs
'''